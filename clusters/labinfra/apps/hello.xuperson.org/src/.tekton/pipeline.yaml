apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: git-buildah-working
  namespace: tektonic
spec:
  params:
  - name: IMAGE
    type: string
    description: Name (reference) of the image to build
  - name: REPO_URL
    type: string
    description: Git repository URL to clone
  - name: REVISION
    type: string
    default: main
    description: Git revision to checkout
  workspaces:
  - name: source
    description: Workspace for source code and build cache
  steps:
  - name: git-clone
    image: alpine/git:latest
    script: |
      #!/bin/sh
      set -euo pipefail
      
      cd $(workspaces.source.path)
      
      # Clean workspace safely if it exists
      if [ -d .git ]; then
        echo "Cleaning existing git repository..."
        rm -rf .git ./* || true
      fi
      
      echo "Cloning repository: $(params.REPO_URL)"
      git clone $(params.REPO_URL) .
      git checkout $(params.REVISION)
      
      echo "Repository cloned successfully"
      ls -la
      
  - name: buildah-build-push
    image: quay.io/buildah/stable:v1.35
    script: |
      #!/bin/bash
      set -euo pipefail
      
      cd $(workspaces.source.path)
      
      # Configure buildah
      export STORAGE_DRIVER=overlay
      export BUILDAH_ISOLATION=chroot
      
      # Build the image
      echo "Building image: $(params.IMAGE)"
      buildah --storage-driver=$STORAGE_DRIVER \
        bud \
        --format=oci \
        --tls-verify=false \
        --no-cache \
        -f ./Dockerfile \
        -t $(params.IMAGE) \
        .
      
      # Push the image
      echo "Pushing image: $(params.IMAGE)"
      buildah --storage-driver=$STORAGE_DRIVER \
        push \
        --tls-verify=false \
        $(params.IMAGE) \
        docker://$(params.IMAGE)
        
    securityContext:
      privileged: true
      runAsUser: 0
    volumeMounts:
    - mountPath: /var/lib/containers
      name: build-storage
    workingDir: $(workspaces.source.path)
  volumes:
  - name: build-storage
    emptyDir:
      sizeLimit: 5Gi
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: deploy-app-clean
  namespace: tektonic
spec:
  params:
    - name: IMAGE
      description: Image to deploy
    - name: APP_NAME
      description: Application name
      default: tektonic-app
  steps:
    - name: deploy
      image: bitnami/kubectl:latest
      script: |
        #!/bin/bash
        set -euo pipefail
        
        # Check if deployment exists
        if kubectl get deployment $(params.APP_NAME) -n tektonic >/dev/null 2>&1; then
          echo "Updating existing deployment..."
          kubectl set image deployment/$(params.APP_NAME) \
            $(params.APP_NAME)=$(params.IMAGE) \
            -n tektonic
        else
          echo "Deployment not found - you may need to create it first"
          exit 1
        fi
        
        # Wait for rollout to complete
        kubectl rollout status deployment/$(params.APP_NAME) -n tektonic --timeout=300s
---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: build-deploy-pipeline-working
  namespace: tektonic
spec:
  params:
    - name: repo-url
      type: string
      description: The git repository URL
    - name: image-reference
      type: string
      description: The image reference to build and deploy
    - name: revision
      type: string
      default: main
      description: Git revision to build
  workspaces:
    - name: source-data
      description: Shared workspace for pipeline tasks
  tasks:
    - name: build-push-image
      taskRef:
        name: git-buildah-working
      workspaces:
        - name: source
          workspace: source-data
      params:
        - name: IMAGE
          value: $(params.image-reference)
        - name: REPO_URL
          value: $(params.repo-url)
        - name: REVISION
          value: $(params.revision)
    
    - name: deploy-application
      runAfter: ["build-push-image"]
      taskRef:
        name: deploy-app-clean
      params:
        - name: IMAGE
          value: $(params.image-reference)
        - name: APP_NAME
          value: tektonic-app