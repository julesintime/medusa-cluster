---
# External ingress for webhook endpoints
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: git-webhook-ingress
  namespace: argocd
  labels:
    app.kubernetes.io/name: argo-events-webhooks
    app.kubernetes.io/component: webhook-ingress
  annotations:
    external-dns.alpha.kubernetes.io/hostname: "webhooks.xuperson.org"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  rules:
  - host: webhooks.xuperson.org
    http:
      paths:
      # Git webhook endpoint
      - path: /git-webhook/?(.*)
        pathType: Prefix
        backend:
          service:
            name: git-webhook-eventsource-svc
            port:
              number: 12000
      # Generic Git webhook endpoint
      - path: /git-webhook/?(.*)
        pathType: Prefix
        backend:
          service:
            name: git-webhook-eventsource-svc
            port:
              number: 13000

---
# ConfigMap for webhook documentation
apiVersion: v1
kind: ConfigMap
metadata:
  name: webhook-endpoints-info
  namespace: argocd
  labels:
    app.kubernetes.io/name: argo-events-webhooks
    app.kubernetes.io/component: documentation
data:
  webhook-endpoints.md: |
    # Argo Events Webhook Endpoints

    ## Configuration for Git Repository Webhooks

    ### Git Webhook
    - **URL**: https://webhooks.xuperson.org/git-webhook
    - **Method**: POST
    - **Content-Type**: application/json
    - **Events**: Push events to main/master branch for labinfra repos
    - **Purpose**: General CI/CD trigger for any supported repository

    ## Setup Instructions

    ### For Gitea/GitHub/GitLab:
    1. Go to Repository Settings â†’ Webhooks
    2. Add new webhook with appropriate URL
    3. Set Content-Type to "application/json"
    4. Select "Just the push event" or configure specific events
    5. Ensure webhook is active

    ### Testing:
    ```bash
    # Test git webhook
    curl -X POST https://webhooks.xuperson.org/git-webhook \
      -H "Content-Type: application/json" \
      -d '{"ref":"refs/heads/main","repository":{"full_name":"labinfra/test"}}'
    ```

    ## Security Notes
    - Webhooks are exposed publicly but filtered by repository and branch
    - Consider adding webhook secret authentication for production use
    - Monitor webhook logs in argo-events controller