apiVersion: secrets.infisical.com/v1alpha1
kind: InfisicalSecret
metadata:
  name: claude-wrapper-secrets
  namespace: claude-wrapper
spec:
  hostAPI: https://app.infisical.com/api
  resyncInterval: 60
  
  authentication:
    serviceToken:
      secretsScope:
        envSlug: prod
        secretsPath: "/"
        recursive: false
      serviceTokenSecretReference:
        secretName: infisical-service-token
        secretNamespace: infisical-operator  # Shared service token
  
  managedKubeSecretReferences:
    - secretName: claude-wrapper-auth
      secretNamespace: claude-wrapper
      creationPolicy: "Orphan"
      template:
        data:
          # Claude Code authentication options
          anthropic-api-key: "{{ if .CLAUDE_WRAPPER_ANTHROPIC_API_KEY }}{{ .CLAUDE_WRAPPER_ANTHROPIC_API_KEY.Value }}{{ else }}{{ end }}"
          
          # OAuth authentication (JSON file content)
          claude-oauth-json: "{{ if .CLAUDE_WRAPPER_CLAUDE_OAUTH_JSON }}{{ .CLAUDE_WRAPPER_CLAUDE_OAUTH_JSON.Value }}{{ else }}{}{{ end }}"
          
          # AWS Bedrock authentication
          claude-use-bedrock: "{{ if .CLAUDE_WRAPPER_CLAUDE_CODE_USE_BEDROCK }}{{ .CLAUDE_WRAPPER_CLAUDE_CODE_USE_BEDROCK.Value }}{{ else }}0{{ end }}"
          aws-access-key-id: "{{ if .CLAUDE_WRAPPER_AWS_ACCESS_KEY_ID }}{{ .CLAUDE_WRAPPER_AWS_ACCESS_KEY_ID.Value }}{{ else }}{{ end }}"
          aws-secret-access-key: "{{ if .CLAUDE_WRAPPER_AWS_SECRET_ACCESS_KEY }}{{ .CLAUDE_WRAPPER_AWS_SECRET_ACCESS_KEY.Value }}{{ else }}{{ end }}"
          aws-region: "{{ if .CLAUDE_WRAPPER_AWS_REGION }}{{ .CLAUDE_WRAPPER_AWS_REGION.Value }}{{ else }}{{ end }}"
          
          # Vertex AI authentication
          claude-use-vertex: "{{ if .CLAUDE_WRAPPER_CLAUDE_CODE_USE_VERTEX }}{{ .CLAUDE_WRAPPER_CLAUDE_CODE_USE_VERTEX.Value }}{{ else }}0{{ end }}"
          anthropic-vertex-project-id: "{{ if .CLAUDE_WRAPPER_ANTHROPIC_VERTEX_PROJECT_ID }}{{ .CLAUDE_WRAPPER_ANTHROPIC_VERTEX_PROJECT_ID.Value }}{{ else }}{{ end }}"
          cloud-ml-region: "{{ if .CLAUDE_WRAPPER_CLOUD_ML_REGION }}{{ .CLAUDE_WRAPPER_CLOUD_ML_REGION.Value }}{{ else }}{{ end }}"
          google-application-credentials: "{{ if .CLAUDE_WRAPPER_GOOGLE_APPLICATION_CREDENTIALS }}{{ .CLAUDE_WRAPPER_GOOGLE_APPLICATION_CREDENTIALS.Value }}{{ else }}{{ end }}"
          
          # Optional API key protection for the wrapper endpoints
          api-key: "{{ if .CLAUDE_WRAPPER_API_KEY }}{{ .CLAUDE_WRAPPER_API_KEY.Value }}{{ else }}{{ end }}"
          
          # Additional configuration
          max-timeout: "{{ if .CLAUDE_WRAPPER_MAX_TIMEOUT }}{{ .CLAUDE_WRAPPER_MAX_TIMEOUT.Value }}{{ else }}600000{{ end }}"
          cors-origins: "{{ if .CLAUDE_WRAPPER_CORS_ORIGINS }}{{ .CLAUDE_WRAPPER_CORS_ORIGINS.Value }}{{ else }}[\"*\"]{{ end }}"
          
          # Rate limiting configuration
          rate-limit-enabled: "{{ if .CLAUDE_WRAPPER_RATE_LIMIT_ENABLED }}{{ .CLAUDE_WRAPPER_RATE_LIMIT_ENABLED.Value }}{{ else }}true{{ end }}"
          rate-limit-chat-per-minute: "{{ if .CLAUDE_WRAPPER_RATE_LIMIT_CHAT_PER_MINUTE }}{{ .CLAUDE_WRAPPER_RATE_LIMIT_CHAT_PER_MINUTE.Value }}{{ else }}10{{ end }}"
          rate-limit-debug-per-minute: "{{ if .CLAUDE_WRAPPER_RATE_LIMIT_DEBUG_PER_MINUTE }}{{ .CLAUDE_WRAPPER_RATE_LIMIT_DEBUG_PER_MINUTE.Value }}{{ else }}2{{ end }}"
          rate-limit-auth-per-minute: "{{ if .CLAUDE_WRAPPER_RATE_LIMIT_AUTH_PER_MINUTE }}{{ .CLAUDE_WRAPPER_RATE_LIMIT_AUTH_PER_MINUTE.Value }}{{ else }}10{{ end }}"
          rate-limit-health-per-minute: "{{ if .CLAUDE_WRAPPER_RATE_LIMIT_HEALTH_PER_MINUTE }}{{ .CLAUDE_WRAPPER_RATE_LIMIT_HEALTH_PER_MINUTE.Value }}{{ else }}30{{ end }}"