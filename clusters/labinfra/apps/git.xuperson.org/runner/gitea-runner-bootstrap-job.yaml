apiVersion: batch/v1
kind: Job
metadata:
  name: gitea-runner-bootstrap
  namespace: gitea
spec:
  ttlSecondsAfterFinished: 3600  # Clean up after 1h
  backoffLimit: 2
  template:
    metadata:
      labels:
        app: gitea-runner-bootstrap
    spec:
      restartPolicy: OnFailure
      serviceAccountName: gitea-runner-bootstrap
      containers:
      - name: bootstrap
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          set -e
          echo "Generating runner token via Gitea CLI..."
          
          # Get the actual Gitea pod name (more robust than using deployment name)
          GITEA_POD=$(kubectl get pods -n gitea -l app.kubernetes.io/name=gitea -o jsonpath='{.items[0].metadata.name}')
          
          if [ -z "$GITEA_POD" ]; then
            echo "No Gitea pod found"
            exit 1
          fi
          
          echo "Found Gitea pod: $GITEA_POD"
          
          # Generate token directly via CLI
          RUNNER_TOKEN=$(kubectl exec -n gitea $GITEA_POD -- gitea actions generate-runner-token | tr -d '\r\n')
          
          if [ -z "$RUNNER_TOKEN" ]; then
            echo "Failed to generate runner token"
            exit 1
          fi
          
          echo "Runner token generated successfully"
          
          # Create or update the runner secret directly  
          kubectl create secret generic runner-secret -n gitea \
            --from-literal=token="$RUNNER_TOKEN" \
            --dry-run=client -o yaml | kubectl apply -f -
          
          # Restart runner deployment
          kubectl rollout restart deployment/act-runner -n gitea
          
          echo "Runner bootstrap completed!"
        
        resources:
          requests:
            memory: "32Mi" 
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitea-runner-bootstrap
  namespace: gitea
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitea-runner-bootstrap
  namespace: gitea
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create", "patch", "update"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "patch", "update"]
- apiGroups: ["apps"]
  resources: ["deployments/status"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitea-runner-bootstrap-gitea
  namespace: gitea
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get"]
- apiGroups: ["apps"]  
  resources: ["deployments/exec"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitea-runner-bootstrap
  namespace: gitea
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitea-runner-bootstrap
subjects:
- kind: ServiceAccount
  name: gitea-runner-bootstrap
  namespace: gitea
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitea-runner-bootstrap-gitea
  namespace: gitea
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitea-runner-bootstrap-gitea
subjects:
- kind: ServiceAccount
  name: gitea-runner-bootstrap
  namespace: gitea