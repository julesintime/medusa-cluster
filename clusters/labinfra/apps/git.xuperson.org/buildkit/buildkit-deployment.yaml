---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: buildkitd
  namespace: gitea
  labels:
    app.kubernetes.io/name: buildkit
    app.kubernetes.io/component: build-service
    app.kubernetes.io/managed-by: flux
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: buildkit
      app.kubernetes.io/component: build-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: buildkit
        app.kubernetes.io/component: build-service
    spec:
      serviceAccountName: buildkit
      initContainers:
      - name: setup-certs
        image: alpine:latest
        command:
        - sh
        - -c
        - |
          set -e
          echo "Setting up BuildKit certificates..."
          
          # Decode base64 certificates and create PEM files
          echo "$BUILDKIT_CA_PEM_B64" | base64 -d > /certs/ca.pem
          echo "$BUILDKIT_CERT_PEM_B64" | base64 -d > /certs/cert.pem
          echo "$BUILDKIT_KEY_PEM_B64" | base64 -d > /certs/key.pem
          
          # Set proper permissions
          chmod 444 /certs/ca.pem /certs/cert.pem
          chmod 400 /certs/key.pem
          
          echo "Certificates prepared successfully"
        env:
        - name: BUILDKIT_CA_PEM_B64
          valueFrom:
            secretKeyRef:
              name: buildkit-daemon-certs
              key: BUILDKIT_CA_PEM_B64
        - name: BUILDKIT_CERT_PEM_B64
          valueFrom:
            secretKeyRef:
              name: buildkit-daemon-certs
              key: BUILDKIT_CERT_PEM_B64
        - name: BUILDKIT_KEY_PEM_B64
          valueFrom:
            secretKeyRef:
              name: buildkit-daemon-certs
              key: BUILDKIT_KEY_PEM_B64
        volumeMounts:
        - name: certs
          mountPath: /certs
        resources:
          requests:
            memory: "32Mi" 
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
      containers:
      - name: buildkitd
        image: moby/buildkit:master-rootless
        args:
        - --addr
        - unix:///run/user/1000/buildkit/buildkitd.sock
        - --addr
        - tcp://0.0.0.0:1235
        - --oci-worker-no-process-sandbox
        - --allow-insecure-entitlement=security.insecure
        - --tlscacert
        - /certs/ca.pem
        - --tlscert
        - /certs/cert.pem
        - --tlskey
        - /certs/key.pem
        env:
        - name: HOME
          value: "/home/user"
        - name: USER
          value: "user"
        - name: XDG_RUNTIME_DIR
          value: "/run/user/1000"
        - name: TMPDIR
          value: "/home/user/.local/tmp"
        - name: BUILDKIT_HOST
          value: "unix:///run/user/1000/buildkit/buildkitd.sock"
        - name: DOCKER_CONFIG
          value: "/home/user/.local/share/docker"
        ports:
        - containerPort: 1235
          name: buildkit
          protocol: TCP
        volumeMounts:
        - name: certs
          mountPath: /certs
          readOnly: true
        - name: buildkit-cache
          mountPath: /home/user/.local/share/buildkit
        - name: buildkit-runtime
          mountPath: /run/user/1000
        - name: buildkit-tmp
          mountPath: /home/user/.local/tmp
        - name: docker-config
          mountPath: /home/user/.local/share/docker
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        readinessProbe:
          exec:
            command:
            - buildctl
            - debug
            - workers
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        livenessProbe:
          exec:
            command:
            - buildctl
            - debug
            - workers
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 10
          failureThreshold: 3
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          seccompProfile:
            type: Unconfined
          appArmorProfile:
            type: Unconfined
      volumes:
      - name: certs
        emptyDir: {}
      - name: buildkit-cache
        emptyDir: {}
      - name: buildkit-runtime
        emptyDir: {}
      - name: buildkit-tmp
        emptyDir: {}
      - name: docker-config
        emptyDir: {}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
