---
apiVersion: batch/v1
kind: Job
metadata:
  name: hello-labinfra-repo-init
  namespace: gitea
  labels:
    app.kubernetes.io/name: hello-labinfra-repo-init
    app.kubernetes.io/component: initialization
    app.kubernetes.io/managed-by: flux
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hello-labinfra-repo-init
    spec:
      restartPolicy: OnFailure
      serviceAccount: gitea-runner-init
      initContainers:
      - name: wait-for-gitea
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "🔄 Waiting for Gitea to be ready..."
          until curl -f -s http://gitea-http:3000/api/v1/version; do
            echo "   Gitea not ready, waiting 10 seconds..."
            sleep 10
          done
          echo "✅ Gitea is ready!"
      containers:
      - name: create-repo-and-token
        image: bitnami/kubectl:latest
        env:
        - name: GITEA_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: gitea-admin-secrets
              key: username
        - name: GITEA_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitea-admin-secrets
              key: password
        command:
        - /bin/bash
        - -c
        - |
          set -e
          echo "🔍 Checking if hello-labinfra repository and admin token already exist..."
          
          # Check if admin token secret already exists and is valid
          if kubectl get secret hello-labinfra-admin-token -n gitea >/dev/null 2>&1; then
            TOKEN=$(kubectl get secret hello-labinfra-admin-token -n gitea -o jsonpath='{.data.token}' | base64 -d 2>/dev/null || echo "")
            if [ ! -z "$TOKEN" ] && [ ${#TOKEN} -gt 10 ]; then
              echo "� Valid admin token already exists"
              ADMIN_TOKEN="$TOKEN"
            fi
          fi
          
          # If no valid token, create one using Gitea CLI (like the runner token job)
          if [ -z "$ADMIN_TOKEN" ]; then
            echo "� Creating new admin API token using Gitea CLI..."
            
            # Wait for Gitea to be ready (use correct deployment name)
            echo "⏳ Waiting for Gitea to be ready..."
            until kubectl get deployment gitea -n gitea >/dev/null 2>&1 && \
                  [ "$(kubectl get deployment gitea -n gitea -o jsonpath='{.status.readyReplicas}')" = "1" ]; do
              echo "   Waiting for Gitea deployment..."
              sleep 10
            done
            
            # Get Gitea pod (not act-runner) - use app=gitea to distinguish from act-runner
            GITEA_POD=$(kubectl get pods -n gitea -l app=gitea -o jsonpath='{.items[0].metadata.name}')
            echo "📦 Found Gitea pod: $GITEA_POD"
            
            # Create admin token using Gitea CLI
            ADMIN_TOKEN=$(kubectl exec -n gitea $GITEA_POD -- gitea admin user generate-access-token --username "$GITEA_ADMIN_USERNAME" --token-name "hello-labinfra-automation" --scopes "write:repository,write:user" | tr -d '\r\n' || echo "")
            
            if [ -z "$ADMIN_TOKEN" ]; then
              echo "❌ Failed to create admin token"
              exit 1
            fi
            
            # Store the token in a secret
            kubectl create secret generic hello-labinfra-admin-token -n gitea \
              --from-literal=token="$ADMIN_TOKEN" \
              --dry-run=client -o yaml | kubectl apply -f -
            echo "💾 Admin token stored in secret"
          fi
          
          # Check if repository already exists using Gitea CLI
          echo "📦 Checking repository status..."
          REPO_EXISTS=$(kubectl exec -n gitea $GITEA_POD -- gitea admin repo list --user "$GITEA_ADMIN_USERNAME" | grep "hello-labinfra" || echo "")
          
          if [ -z "$REPO_EXISTS" ]; then
            echo "🏗️ Creating hello-labinfra repository using Gitea CLI..."
            kubectl exec -n gitea $GITEA_POD -- gitea admin repo create \
              --owner "$GITEA_ADMIN_USERNAME" \
              --name "hello-labinfra" \
              --description "Hello LabInfra - Cloud Native GitOps Demo Application" \
              --private=false
            echo "✅ Repository created successfully!"
          else
            echo "📦 Repository hello-labinfra already exists"
          fi
          
          # Check if runner token exists (reuse the same pattern as gitea-runner-token-job)
          if ! kubectl get secret gitea-runner-token -n gitea >/dev/null 2>&1; then
            echo "🏃 Creating Gitea Actions runner token..."
            RUNNER_TOKEN=$(kubectl exec -n gitea $GITEA_POD -- gitea actions generate-runner-token | tr -d '\r\n' || echo "")
            
            if [ -n "$RUNNER_TOKEN" ]; then
              kubectl create secret generic gitea-runner-token -n gitea \
                --from-literal=token="$RUNNER_TOKEN" \
                --dry-run=client -o yaml | kubectl apply -f -
              echo "✅ Runner token created and stored"
            else
              echo "⚠️ Failed to create runner token (continuing anyway)"
            fi
          else
            echo "🏃 Runner token already exists"
          fi
          
          echo "🎉 Hello LabInfra repository and tokens initialization completed!"
          echo "📋 Summary:"
          echo "   - Repository: git.xuperson.org/$GITEA_ADMIN_USERNAME/hello-labinfra"
          echo "   - Admin token: Available for API operations"
          echo "   - Runner token: Available for Actions registration"
