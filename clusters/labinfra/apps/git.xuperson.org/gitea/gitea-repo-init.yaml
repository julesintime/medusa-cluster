---
apiVersion: batch/v1
kind: Job
metadata:
  name: gitea-repo-init
  namespace: gitea
  labels:
    app.kubernetes.io/name: gitea-repo-init
    app.kubernetes.io/component: initialization
    app.kubernetes.io/managed-by: flux
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gitea-repo-init
    spec:
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-gitea
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for Gitea to be ready..."
          until curl -f -s http://gitea:3000/api/v1/version; do
            echo "Gitea not ready, waiting 10 seconds..."
            sleep 10
          done
          echo "Gitea is ready!"
      containers:
      - name: create-repo
        image: curlimages/curl:latest
        env:
        - name: GITEA_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: gitea-admin-secrets
              key: username
        - name: GITEA_ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: gitea-admin-secrets
              key: token
        command:
        - /bin/sh
        - -c
        - |
          echo "Creating hello-labinfra repository..."
          
          # Check if repository already exists
          REPO_CHECK=$(curl -s -w "%{http_code}" -o /dev/null \
            -H "Authorization: token $GITEA_ADMIN_TOKEN" \
            "http://gitea:3000/api/v1/repos/$GITEA_ADMIN_USERNAME/hello-labinfra")
          
          if [ "$REPO_CHECK" = "200" ]; then
            echo "Repository hello-labinfra already exists, skipping creation"
            exit 0
          fi
          
          # Create repository
          CREATE_RESPONSE=$(curl -s -w "%{http_code}" \
            -X POST \
            -H "Authorization: token $GITEA_ADMIN_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "name": "hello-labinfra",
              "description": "Hello LabInfra - Cloud Native GitOps Demo Application",
              "private": false,
              "auto_init": true,
              "default_branch": "main"
            }' \
            "http://gitea:3000/api/v1/user/repos")
          
          HTTP_CODE=$(echo "$CREATE_RESPONSE" | tail -c 4)
          
          if [ "$HTTP_CODE" = "201" ]; then
            echo "‚úÖ Repository hello-labinfra created successfully!"
          else
            echo "‚ùå Failed to create repository. HTTP Code: $HTTP_CODE"
            echo "Response: $CREATE_RESPONSE"
            exit 1
          fi
          
          echo "üéâ Repository initialization completed!"
