---
apiVersion: batch/v1
kind: Job
metadata:
  name: gitea-admin-token-init
  namespace: gitea
  labels:
    app.kubernetes.io/name: gitea-admin-token-init
    app.kubernetes.io/component: token-management
    app.kubernetes.io/managed-by: flux
spec:
  ttlSecondsAfterFinished: 300
  backoffLimit: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gitea-admin-token-init
    spec:
      restartPolicy: OnFailure
      serviceAccountName: gitea-runner-init
      initContainers:
      - name: wait-for-gitea
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "🔄 Waiting for Gitea to be ready..."
          until curl -f -s http://gitea-http:3000/api/v1/version; do
            echo "   Gitea not ready, waiting 10 seconds..."
            sleep 10
          done
          echo "✅ Gitea is ready!"
      containers:
      - name: create-admin-token
        image: bitnami/kubectl:latest
        env:
        - name: GITEA_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: gitea-admin-secrets
              key: username
        - name: GITEA_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitea-admin-secrets
              key: password
        command:
        - /bin/bash
        - -c
        - |
          set -e
          echo "🔍 Checking if admin API token already exists..."

          # Check if kubectl is available
          echo "Checking kubectl availability..."
          which kubectl || echo "kubectl not found in PATH"
          ls -la /usr/local/bin/kubectl || echo "kubectl not in /usr/local/bin"
          ls -la /usr/bin/kubectl || echo "kubectl not in /usr/bin"

          # Check if token secret already exists and is valid
          if /usr/local/bin/kubectl get secret gitea-admin-api-token -n gitea >/dev/null 2>&1; then
            TOKEN=$(/usr/local/bin/kubectl get secret gitea-admin-api-token -n gitea -o jsonpath='{.data.token}' | base64 -d 2>/dev/null || echo "")
            if [ ! -z "$TOKEN" ] && [ ${#TOKEN} -gt 10 ]; then
              echo "✅ Valid admin API token already exists"
              exit 0
            fi
          fi

          echo "🏗️ Creating new admin API token..."

          # Get Gitea pod
          GITEA_POD=$(/usr/local/bin/kubectl get pods -n gitea -l app=gitea -o jsonpath='{.items[0].metadata.name}')
          if [ -z "$GITEA_POD" ]; then
            echo "❌ No Gitea pod found"
            exit 1
          fi

          echo "📦 Found Gitea pod: $GITEA_POD"

          # Create admin API token using Gitea CLI
          # Using the same approach as the runner token job
          ADMIN_TOKEN=$(/usr/local/bin/kubectl exec -n gitea $GITEA_POD -- gitea admin user generate-access-token \
            --username "$GITEA_ADMIN_USERNAME" \
            --token-name "flux-automation" \
            --scopes "write:admin,write:repository,write:user,read:admin,read:repository" | tr -d '\r\n' || echo "")

          if [ -z "$ADMIN_TOKEN" ]; then
            echo "❌ Failed to create admin API token"
            exit 1
          fi

          echo "✅ Admin API token created successfully"

          # Store the token in a secret
          /usr/local/bin/kubectl create secret generic gitea-admin-api-token -n gitea \
            --from-literal=token="$ADMIN_TOKEN" \
            --dry-run=client -o yaml | /usr/local/bin/kubectl apply -f -

          echo "💾 Admin API token stored in secret 'gitea-admin-api-token'"
          echo "🎉 Gitea admin token initialization completed!"

        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
