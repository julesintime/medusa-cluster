---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hello-labinfra-source
  namespace: gitea
  labels:
    app.kubernetes.io/name: hello-labinfra-source
    app.kubernetes.io/component: source-code
    app.kubernetes.io/managed-by: flux
data:
  package.json: |
    {
      "name": "hello-labinfra",
      "version": "1.0.0",
      "description": "Hello LabInfra - Cloud Native GitOps Demo",
      "main": "index.js",
      "scripts": {
        "start": "node index.js",
        "dev": "node index.js"
      },
      "dependencies": {
        "express": "^4.18.0"
      },
      "engines": {
        "node": ">=18"
      }
    }
  
  index.js: |
    const express = require('express');
    const app = express();
    const port = process.env.PORT || 3000;

    app.get('/', (req, res) => {
      res.json({
        message: "üéâ Hello LabInfra!",
        description: "Cloud Native GitOps Demo Application",
        version: process.env.BUILD_REF || "dev",
        buildDate: process.env.BUILD_DATE || new Date().toISOString(),
        environment: process.env.NODE_ENV || "development"
      });
    });

    app.get('/health', (req, res) => {
      res.json({ status: 'healthy', timestamp: new Date().toISOString() });
    });

    app.listen(port, () => {
      console.log(`üöÄ Hello LabInfra server running on port ${port}`);
    });
  
  Dockerfile: |
    FROM node:18-alpine

    WORKDIR /app

    # Copy package files
    COPY package*.json ./

    # Install dependencies
    RUN npm ci --only=production

    # Copy application code
    COPY . .

    # Create non-root user
    RUN addgroup -g 1001 -S nodejs && \
        adduser -S nodejs -u 1001

    # Change ownership
    RUN chown -R nodejs:nodejs /app
    USER nodejs

    # Expose port
    EXPOSE 3000

    # Health check
    HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
      CMD node -e "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

    # Start application
    CMD ["npm", "start"]
  
  README.md: |
    # Hello LabInfra

    Cloud Native GitOps Demo Application

    ## Features

    - **Express.js** web server
    - **Health checks** at `/health`
    - **Container-ready** with multi-stage Dockerfile
    - **GitOps deployment** with Flux CD
    - **Automated CI/CD** with Gitea Actions and BuildKit

    ## Deployment

    This application is automatically deployed using:

    1. **Gitea Actions** - Builds container image with BuildKit
    2. **Gitea Package Registry** - Stores container images
    3. **Flux CD** - Monitors registry and updates Kubernetes deployment
    4. **Kubernetes** - Runs the application with high availability

    ## Development

    ```bash
    npm install
    npm start
    ```

    ## Access

    - **Application**: https://hello.xuperson.org
    - **Health Check**: https://hello.xuperson.org/health
---
apiVersion: batch/v1
kind: Job
metadata:
  name: gitea-source-push
  namespace: gitea
  labels:
    app.kubernetes.io/name: gitea-source-push
    app.kubernetes.io/component: initialization
    app.kubernetes.io/managed-by: flux
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gitea-source-push
    spec:
      restartPolicy: OnFailure
      containers:
      - name: push-source
        image: alpine/git:latest
        env:
        - name: GITEA_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: gitea-admin-secrets
              key: username
        - name: GITEA_ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: gitea-admin-secrets
              key: token
        volumeMounts:
        - name: source-code
          mountPath: /source
        - name: workflow-config
          mountPath: /workflow
        command:
        - /bin/sh
        - -c
        - |
          echo "Pushing source code to hello-labinfra repository..."
          
          # Configure git
          git config --global user.name "Gitea Auto Deploy"
          git config --global user.email "auto-deploy@xuperson.org"
          git config --global init.defaultBranch main
          
          # Create working directory
          mkdir -p /workspace
          cd /workspace
          
          # Clone repository with token authentication
          REPO_URL="http://$GITEA_ADMIN_USERNAME:$GITEA_ADMIN_TOKEN@gitea:3000/$GITEA_ADMIN_USERNAME/hello-labinfra.git"
          git clone "$REPO_URL" .
          
          # Copy source files
          cp /source/* . 2>/dev/null || echo "Some source files not copied (expected)"
          
          # Create .gitea/workflows directory
          mkdir -p .gitea/workflows
          cp /workflow/buildkit-ci.yml .gitea/workflows/
          
          # Check if files were added
          if git status --porcelain | grep -q .; then
            echo "Adding source files..."
            git add .
            git commit -m "üöÄ Initial commit: Hello LabInfra application with GitOps CI/CD

            - Express.js application with health checks
            - Dockerfile for containerization  
            - Gitea Actions workflow with BuildKit
            - Automated deployment with Flux CD
            - Ready for cloud-native GitOps!"
            
            git push origin main
            echo "‚úÖ Source code pushed successfully!"
            echo "üéØ Workflow will trigger automatically on push"
          else
            echo "‚ÑπÔ∏è  No changes to commit, source code already up to date"
          fi
          
          echo "üéâ Source push completed!"
      volumes:
      - name: source-code
        configMap:
          name: hello-labinfra-source
      - name: workflow-config
        configMap:
          name: hello-labinfra-workflow
