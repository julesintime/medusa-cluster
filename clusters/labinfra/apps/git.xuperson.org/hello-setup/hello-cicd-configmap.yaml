---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hello-cicd-workflow
  namespace: gitea
  labels:
    app.kubernetes.io/name: hello-app
    app.kubernetes.io/component: cicd-workflow
    app.kubernetes.io/managed-by: flux
data:
  docker-buildx-ci.yml: |
    name: Simple Docker Buildx CI

    on:
      push:
        branches: [ main, master ]
      pull_request:
        branches: [ main, master ]

    jobs:
      build:
        runs-on: ubuntu-latest
        container: node:18-alpine

        steps:
        - name: Build and push with Docker Buildx
          shell: sh
          run: |
            set -e
            
            # Install required tools for Alpine/minimal containers
            if command -v apk >/dev/null 2>&1; then
              echo "üîß Installing required packages (Alpine)..."
              apk add --no-cache git
            elif command -v apt-get >/dev/null 2>&1; then
              echo "üîß Installing required packages (Debian/Ubuntu)..."
              apt-get update && apt-get install -y git
            elif command -v yum >/dev/null 2>&1; then
              echo "üîß Installing required packages (RedHat/CentOS)..."
              yum install -y git
            else
              echo "‚ö†Ô∏è Package manager not found, assuming git is available"
            fi
            
            # Clone the repository
            echo "üì¶ Cloning repository..."
            git clone ${{ gitea.repository_clone_url }} /tmp/build
            cd /tmp/build
            git checkout ${{ gitea.sha }}
            
            # Get commit info for tagging
            COMMIT_SHA=$(git rev-parse --short HEAD)
            BRANCH_NAME=${{ gitea.ref_name }}
            IMAGE_BASE="registry.k3s.internal/hello-app"
            
            # Build tags
            if [ "$BRANCH_NAME" = "main" ] || [ "$BRANCH_NAME" = "master" ]; then
              TAGS="$IMAGE_BASE:latest,$IMAGE_BASE:$BRANCH_NAME-$COMMIT_SHA"
            else
              TAGS="$IMAGE_BASE:$BRANCH_NAME-$COMMIT_SHA"
            fi
            
            echo "üî® Building image with tags: $TAGS"
            
            # Build and push with Docker Buildx
            docker buildx build \
              --platform linux/amd64 \
              --tag "$IMAGE_BASE:latest" \
              --tag "$IMAGE_BASE:$BRANCH_NAME-$COMMIT_SHA" \
              --cache-from type=registry,ref=$IMAGE_BASE:cache \
              --cache-to type=registry,ref=$IMAGE_BASE:cache,mode=max \
              --push \
              /tmp/build
            
            echo "‚úÖ Build completed successfully!"
            echo "üìã Image tags: $TAGS"
