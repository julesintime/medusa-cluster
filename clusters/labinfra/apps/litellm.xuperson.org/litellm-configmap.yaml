apiVersion: v1
kind: ConfigMap
metadata:
  name: litellm-config-file
  namespace: litellm
data:
  config.yaml: |
    # Advanced routing: specific models, wildcards, and default rotation with fallbacks
    model_list:

      # === AI GATEWAY MODELS (PRIMARY) ===
      # Vercel AI Gateway - stealth/sonoma models with fallback routing

      # Primary model - stealth/sonoma-dusk-alpha (WORKING)
      - model_name: "stealth/sonoma-dusk-alpha"
        litellm_params:
          model: "vercel_ai_gateway/stealth/sonoma-dusk-alpha"
          api_key: "os.environ/VERCEL_AI_GATEWAY_API_KEY"
          rpm: 20
          tpm: 1000000
        model_info:
          health_check_timeout: 10
          cooldown_time: 60

      # All models use sonoma-dusk-alpha (sky-alpha returns empty responses)

      # Alias sky-alpha to dusk-alpha (since sky returns empty)
      - model_name: "stealth/sonoma-sky-alpha"
        litellm_params:
          model: "vercel_ai_gateway/stealth/sonoma-dusk-alpha"
          api_key: "os.environ/VERCEL_AI_GATEWAY_API_KEY"
          rpm: 30
          tpm: 1000000
        model_info:
          health_check_timeout: 8
          cooldown_time: 30

      # === GEMINI MODELS TEMPORARILY DISABLED ===
      # All Gemini models are disabled - using only Sonoma models via AI Gateway
          
      # === DEFAULT ROTATION POOL ===
      # "gpt-4" and catch-all models now use AI Gateway stealth/sonoma models

      - model_name: "gpt-4"
        litellm_params:
          model: "vercel_ai_gateway/stealth/sonoma-dusk-alpha"  # Only using dusk (working)
          api_key: "os.environ/VERCEL_AI_GATEWAY_API_KEY"
          rpm: 20
          tpm: 1000000
        model_info:
          health_check_timeout: 10
          cooldown_time: 60
          
    
    # Optimized router settings for daily quota management
    router_settings:
      routing_strategy: usage-based-routing-v2 # Route to deployments with lowest usage
      num_retries: 2                           # Minimal retries to prevent quota waste
      timeout: 45                              # Shorter timeout for faster failover
      retry_after: 1                           # 1s delay between retries
      cooldown_time: 180                       # 3min default cooldown for daily quotas
      allowed_fails: 1                         # Quick cooldown after single failure
      
      # Enable intelligent routing and health monitoring
      enable_pre_call_checks: true             # CRITICAL: Skip unhealthy deployments
      disable_spend_logs: false                # Keep cost tracking
      
      # Error-specific retry policies (optimized for daily quota rotation)
      retry_policy:
        "RateLimitErrorRetries": 1             # Single retry for rate limits
        "ResourceExhaustedErrorRetries": 0     # NO retries for quota exhaustion
        "ServiceUnavailableErrorRetries": 1    # Single retry for service issues
        "TimeoutErrorRetries": 2               # Retry timeouts twice
        "BadRequestErrorRetries": 0            # No retries for bad requests (Gemma models)
        "AuthenticationErrorRetries": 0        # No retries for auth errors
        
      # Error-specific cooldown policies (short cooldowns for daily quota cycling)
      allowed_fails_policy:
        "RateLimitErrorAllowedFails": 2        # Cool down after 2 rate limit errors
        "ResourceExhaustedErrorAllowedFails": 1 # Cool down immediately on quota exhaustion
        "ServiceUnavailableErrorAllowedFails": 1 # Cool down after 1 service error
        "TimeoutErrorAllowedFails": 3          # Allow more timeouts
        "BadRequestErrorAllowedFails": 0       # Immediate permanent cooldown for Gemma
        "AuthenticationErrorAllowedFails": 0   # Immediate permanent cooldown for auth
    
    # Advanced fallback configuration - ALL MODELS FALLBACK TO SONOMA
    litellm_settings:
      # All models fallback to AI Gateway stealth/sonoma models
      fallbacks:
        # Specific model fallbacks
        - "gemini-2.5-pro": ["stealth/sonoma-dusk-alpha"]
        - "gemini-2.5-flash": ["stealth/sonoma-dusk-alpha"]
        - "gemini-2.5-flash-lite": ["stealth/sonoma-dusk-alpha"]
        - "gemini-2.0-flash": ["stealth/sonoma-dusk-alpha"]
        - "gemini-2.0-flash-lite": ["stealth/sonoma-dusk-alpha"]
        - "gemini/*": ["stealth/sonoma-dusk-alpha"]
        # GPT models fallback to sonoma
        - "gpt-3.5-turbo": ["stealth/sonoma-dusk-alpha"]
        - "gpt-4-turbo": ["stealth/sonoma-dusk-alpha"]
        - "gpt-4o": ["stealth/sonoma-dusk-alpha"]
        - "gpt-4o-mini": ["stealth/sonoma-dusk-alpha"]
        - "gpt/*": ["stealth/sonoma-dusk-alpha"]
        # Anthropic models fallback to sonoma
        - "claude-3-opus": ["stealth/sonoma-dusk-alpha"]
        - "claude-3-sonnet": ["stealth/sonoma-dusk-alpha"]
        - "claude-3-haiku": ["stealth/sonoma-dusk-alpha"]
        - "claude-3.5-sonnet": ["stealth/sonoma-dusk-alpha"]
        - "claude/*": ["stealth/sonoma-dusk-alpha"]
        - "anthropic/*": ["stealth/sonoma-dusk-alpha"]

      # Default fallback for any unrecognized model - uses sonoma-dusk-alpha as primary
      default_fallbacks: ["stealth/sonoma-dusk-alpha"]
      
      # Fallback error conditions - trigger fallbacks on quota/rate limit errors
      context_window_fallbacks: [
        {"RateLimitError": ["stealth/sonoma-dusk-alpha"]},
        {"ResourceExhaustedError": ["stealth/sonoma-dusk-alpha"]},
        {"ServiceUnavailableError": ["stealth/sonoma-dusk-alpha"]},
        {"QuotaExceededError": ["stealth/sonoma-dusk-alpha"]}
      ]
      
      # General settings
      success_callback: ["langfuse"]           # Optional: track successful requests
      failure_callback: ["langfuse"]           # Optional: track failed requests
      drop_params: true                        # Drop unsupported parameters
      set_verbose: false                       # Reduce logging noise
      
      # Enhanced error handling optimized for quota management
      request_timeout: 45                      # Shorter timeout for faster rotation
      max_retries: 2                           # Minimal retries to preserve quotas
      fallback_immediately_on_429: true       # Immediate fallback on rate limits
      fallback_immediately_on_503: true       # Immediate fallback on service unavailable
      
    # Background health monitoring and daily quota optimization
    general_settings:
      background_health_checks: true          # Enable proactive health monitoring
      health_check_interval: 300              # Check health every 5 minutes (less frequent)
      health_check_timeout: 8                 # 8s timeout for health checks
      
      # Daily budget management for optimal quota distribution
      proxy_budget_rescheduler_min_time: 60   # Check budget resets every minute
      proxy_budget_rescheduler_max_time: 300  # Max 5min between budget checks