---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: portfolio-build-pipeline
  namespace: argocd
  labels:
    app.kubernetes.io/name: argo-workflows-cicd
    app.kubernetes.io/component: build-pipeline
spec:
  serviceAccountName: workflow-builder
  entrypoint: build-and-push

  arguments:
    parameters:
    - name: repo-url
      value: "https://github.com/xuperson-org/labinfra"
    - name: revision
      value: "HEAD"
    - name: image-tag
      value: "latest"
    - name: registry-url
      value: "git.xuperson.org"
    - name: project-path
      value: "projects/avada-portfolio"

  volumes:
  - name: docker-sock
    hostPath:
      path: /var/run/docker.sock
      type: Socket
  - name: kaniko-secret
    secret:
      secretName: gitea-registry-credentials

  templates:

  # Main build pipeline
  - name: build-and-push
    dag:
      tasks:
      - name: clone-repo
        template: git-clone
        arguments:
          parameters:
          - name: repo-url
            value: "{{workflow.parameters.repo-url}}"
          - name: revision
            value: "{{workflow.parameters.revision}}"

      - name: build-wordpress
        template: kaniko-build
        arguments:
          parameters:
          - name: context
            value: "{{workflow.parameters.project-path}}"
          - name: dockerfile
            value: "{{workflow.parameters.project-path}}/Dockerfile.wordpress"
          - name: image
            value: "{{workflow.parameters.registry-url}}/avada-portfolio/wordpress:{{workflow.parameters.image-tag}}"
        dependencies: [clone-repo]

      - name: update-manifests
        template: update-image-tags
        arguments:
          parameters:
          - name: wordpress-image
            value: "{{workflow.parameters.registry-url}}/avada-portfolio/wordpress:{{workflow.parameters.image-tag}}"
        dependencies: [build-wordpress]

  # Git clone template
  - name: git-clone
    inputs:
      parameters:
      - name: repo-url
      - name: revision
    container:
      image: alpine/git:latest
      command: [sh, -c]
      args:
      - |
        git clone {{inputs.parameters.repo-url}} /workspace
        cd /workspace
        git checkout {{inputs.parameters.revision}}
        echo "Repository cloned successfully"
      volumeMounts:
      - name: workspace
        mountPath: /workspace
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
    volumes:
    - name: workspace
      emptyDir: {}

  # Kaniko build template (replaces Docker builds from Gitea Act Runner)
  - name: kaniko-build
    inputs:
      parameters:
      - name: context
      - name: dockerfile
      - name: image
    container:
      image: gcr.io/kaniko-project/executor:latest
      command: [/kaniko/executor]
      args:
      - --context=/workspace/{{inputs.parameters.context}}
      - --dockerfile=/workspace/{{inputs.parameters.dockerfile}}
      - --destination={{inputs.parameters.image}}
      - --cache=true
      - --compressed-caching=false
      - --cleanup
      volumeMounts:
      - name: workspace
        mountPath: /workspace
      - name: kaniko-secret
        mountPath: /kaniko/.docker
        readOnly: true
      securityContext:
        runAsNonRoot: false  # Kaniko needs root
    volumes:
    - name: workspace
      emptyDir: {}

  # Update image tags in manifests (replaces Tekton deployment trigger)
  - name: update-image-tags
    inputs:
      parameters:
      - name: wordpress-image
    container:
      image: alpine/git:latest
      command: [sh, -c]
      args:
      - |
        # Update the ArgoCD Application to trigger sync with new image
        echo "Updating WordPress image tag: {{inputs.parameters.wordpress-image}}"

        # Create a commit with updated image tags
        cd /workspace

        # Update the deployment YAML with new image
        sed -i 's|image: wordpress:.*|image: {{inputs.parameters.wordpress-image}}|g' \
          clusters/labinfra/apps/avada-portfolio.xuperson.org/avada-portfolio-wordpress-deployment.yaml

        # Configure git
        git config user.email "argo-workflows@xuperson.org"
        git config user.name "Argo Workflows"

        # Commit changes
        git add clusters/labinfra/apps/avada-portfolio.xuperson.org/avada-portfolio-wordpress-deployment.yaml
        git commit -m "ðŸš€ Update WordPress image to {{inputs.parameters.wordpress-image}}

        ðŸ¤– Generated with Argo Workflows

        Built-by: Argo Workflows Build Pipeline
        Image: {{inputs.parameters.wordpress-image}}
        Pipeline: portfolio-build-pipeline"

        # Push changes to trigger ArgoCD sync
        git push origin HEAD

        echo "Image tags updated and committed successfully"
      volumeMounts:
      - name: workspace
        mountPath: /workspace
      - name: git-secret
        mountPath: /root/.ssh
        readOnly: true
      securityContext:
        runAsNonRoot: false  # Need root for git operations
    volumes:
    - name: workspace
      emptyDir: {}
    - name: git-secret
      secret:
        secretName: git-ssh-key
        defaultMode: 0600