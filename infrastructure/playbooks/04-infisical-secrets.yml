---
- name: Configure Infisical secrets for CloudFlare in Kubernetes
  hosts: localhost
  connection: local
  gather_facts: true
  vars:
    kubeconfig: "/Users/xoojulian/.kubeconfig.yaml"
    cloudflare_namespace: "cloudflare"
    infisical_operator_namespace: "infisical-operator"
    
  tasks:
    - name: Get Infisical service token from CLI
      ansible.builtin.shell: |
        infisical secrets get INFISICAL_SERVICE_TOKEN --silent --plain
      register: infisical_token_result
      changed_when: false
      
    - name: Set service token fact
      ansible.builtin.set_fact:
        infisical_service_token: "{{ infisical_token_result.stdout }}"
        
    - name: Debug service token (first 20 chars)
      ansible.builtin.debug:
        msg: "Service token starts with: {{ infisical_service_token[:20] }}..."
        
    - name: Create cloudflare namespace if it doesn't exist
      kubernetes.core.k8s:
        name: "{{ cloudflare_namespace }}"
        api_version: v1
        kind: Namespace
        state: present
        kubeconfig: "{{ kubeconfig }}"
        
    - name: Create infisical-operator-system namespace if it doesn't exist
      kubernetes.core.k8s:
        name: "{{ infisical_operator_namespace }}"
        api_version: v1
        kind: Namespace
        state: present
        kubeconfig: "{{ kubeconfig }}"
        
    - name: Create Infisical service token secret in infisical-operator-system
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ kubeconfig }}"
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: infisical-service-token
            namespace: "{{ infisical_operator_namespace }}"
          type: Opaque
          data:
            infisicalToken: "{{ infisical_service_token | b64encode }}"
            
    - name: Create Infisical service token secret in cloudflare namespace
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ kubeconfig }}"
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: infisical-service-token
            namespace: "{{ cloudflare_namespace }}"
          type: Opaque
          data:
            infisicalToken: "{{ infisical_service_token | b64encode }}"
            
    - name: Verify secrets were created
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: infisical-service-token
        namespace: "{{ item }}"
        kubeconfig: "{{ kubeconfig }}"
      loop:
        - "{{ cloudflare_namespace }}"
        - "{{ infisical_operator_namespace }}"
      register: secret_verification
      
    - name: Display verification results
      ansible.builtin.debug:
        msg: "Secret exists in {{ item.item }}: {{ item.resources | length > 0 }}"
      loop: "{{ secret_verification.results }}"
      
    - name: Force reconcile cloudflare-ingress kustomization
      ansible.builtin.shell: |
        flux reconcile kustomization cloudflare-ingress --with-source
      ignore_errors: true
      
    - name: Wait for CloudFlare pods to be ready
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: "{{ cloudflare_namespace }}"
        label_selectors:
          - app=cloudflared
        kubeconfig: "{{ kubeconfig }}"
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: 300
      ignore_errors: true
      
    - name: Check CloudFlare pod status
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: "{{ cloudflare_namespace }}"
        kubeconfig: "{{ kubeconfig }}"
      register: cloudflare_pods
      
    - name: Display CloudFlare pod status
      ansible.builtin.debug:
        msg: "Pod {{ item.metadata.name }}: {{ item.status.phase }} (Ready: {{ item.status.containerStatuses[0].ready | default('Unknown') }})"
      loop: "{{ cloudflare_pods.resources }}"
      when: cloudflare_pods.resources | length > 0
