---
# Post-Bootstrap Applications Deployment
# Applies applications that require image automation controllers
- name: Deploy Post-Bootstrap Applications (Image Automation Dependent)
  hosts: k3s_control[0]
  gather_facts: false
  vars_files:
    - "../config/group_vars.yml"
  vars:
    kubeconfig_path: "{{ playbook_dir }}/../config/kubeconfig.yaml"

  tasks:
    # ========================================
    # Phase 1: Verify Prerequisites
    # ========================================
    - name: Set KUBECONFIG environment
      ansible.builtin.set_fact:
        kubeconfig_env:
          KUBECONFIG: "{{ kubeconfig_path }}"
      delegate_to: localhost
      become: false

    - name: Wait for image automation controllers to be ready
      ansible.builtin.shell: |
        kubectl wait --for=condition=available deployment/image-reflector-controller -n flux-system --timeout=300s &&
        kubectl wait --for=condition=available deployment/image-automation-controller -n flux-system --timeout=300s
      environment: "{{ kubeconfig_env }}"
      delegate_to: localhost
      become: false
      register: image_controllers_ready

    - name: Verify image automation CRDs are installed
      ansible.builtin.shell: |
        kubectl get crd imagerepositories.image.toolkit.fluxcd.io &&
        kubectl get crd imagepolicies.image.toolkit.fluxcd.io &&
        kubectl get crd imageupdateautomations.image.toolkit.fluxcd.io
      environment: "{{ kubeconfig_env }}"
      delegate_to: localhost
      become: false

    # ========================================
    # Phase 2: Apply Post-Bootstrap Applications
    # ========================================
    - name: Apply post-bootstrap applications
      ansible.builtin.shell: |
        kubectl apply -k {{ playbook_dir }}/../../../clusters/labinfra/post-bootstrap
      environment: "{{ kubeconfig_env }}"
      delegate_to: localhost
      become: false
      register: post_bootstrap_apply

    - name: Wait for hello.xuperson.org application to be ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: hello-app
        namespace: hello
        kubeconfig: "{{ kubeconfig_path }}"
        wait: true
        wait_condition:
          type: Available
          status: "True"
        wait_timeout: 600
      delegate_to: localhost
      become: false
      ignore_errors: true

    # ========================================
    # Phase 3: Validation and Status Report
    # ========================================
    - name: Verify image automation resources are created
      ansible.builtin.shell: |
        echo "📋 Image Repositories:"
        kubectl get imagerepositories -A
        echo -e "\n📋 Image Policies:"
        kubectl get imagepolicies -A
        echo -e "\n📋 Image Update Automations:"
        kubectl get imageupdateautomations -A
      environment: "{{ kubeconfig_env }}"
      delegate_to: localhost
      become: false
      register: image_automation_status

    - name: Test hello application accessibility
      ansible.builtin.uri:
        url: https://hello.xuperson.org
        method: GET
        status_code: 200
        timeout: 10
      delegate_to: localhost
      become: false
      register: hello_app_test
      ignore_errors: true

    - name: Display comprehensive success message
      ansible.builtin.debug:
        msg: |
          🎉 POST-BOOTSTRAP APPLICATIONS DEPLOYED! 🎉
          
          📊 Application Status:
          ✅ Image Automation Controllers: Ready
          ✅ Image Automation CRDs: Installed
          ✅ hello.xuperson.org: {{ 'Deployed & Accessible' if hello_app_test.status == 200 else 'Deployed (check connectivity)' }}
          
          🔄 GitOps Image Automation:
          ✅ ImageRepository: Monitoring git.xuperson.org/helloroot/hello-app
          ✅ ImagePolicy: Alphabetical ordering for main-<hash> tags
          ✅ ImageUpdateAutomation: Auto-updates deployment on new images
          
          🚀 CI/CD Pipeline Status:
          ✅ Gitea Actions: Repository secrets configured
          ✅ BuildKit: Container builds ready
          ✅ Dynamic Secrets: No hardcoded credentials
          ✅ Flux Automation: End-to-end GitOps flow
          
          🌐 Application Access:
          - Hello App: https://hello.xuperson.org
          - Gitea: https://git.xuperson.org
          - Coder: https://coder.xuperson.org
          
          {{ image_automation_status.stdout }}
          
          💡 Next Steps:
          1. Push code changes to trigger CI/CD: git push
          2. Monitor image builds: kubectl logs -n gitea -l app=act-runner-simple
          3. Watch automatic deployments: flux get all -A
          
          Ready for full GitOps operations! 🚀