# GitOps-Native Medusa Backend Worker
# Uses pre-built application from PVC created by Argo Workflow
# Handles background jobs and event processing

apiVersion: apps/v1
kind: Deployment
metadata:
  name: medusa-backend-worker
  namespace: medusa-backend
  labels:
    app.kubernetes.io/name: medusa-backend
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: medusa-cluster
  annotations:
    argocd.argoproj.io/sync-wave: "3"  # Deploy after build workflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: medusa-backend
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: medusa-backend
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: medusa-cluster
    spec:
      serviceAccountName: medusa-backend

      # Verify build before starting worker
      initContainers:
      - name: verify-build
        image: alpine:latest
        command: [sh, -c]
        args:
        - |
          echo "=== Verifying Medusa build for worker ==="

          if [ ! -f /app/.ready ]; then
            echo "ERROR: Build not ready. Please ensure workflow completed successfully."
            exit 1
          fi

          echo "Build ready for worker deployment"
          cat /app/.build-info

          echo "=== Worker verification complete ==="
        volumeMounts:
        - name: medusa-workspace
          mountPath: /app
          readOnly: true

      containers:
      - name: medusa-worker
        image: node:20-alpine
        workingDir: /app
        command: ["/app/start.sh"]
        env:
        - name: NODE_ENV
          value: "production"
        - name: MEDUSA_WORKER_MODE
          value: "worker"
        - name: MEDUSA_BACKEND_URL
          value: "https://medusa-backend.xuperson.org"

        # Database Configuration
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: medusa-backend-secrets
              key: database-url

        # Redis Configuration
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: medusa-backend-secrets
              key: redis-url

        # Security Configuration
        - name: COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: medusa-backend-secrets
              key: cookie-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: medusa-backend-secrets
              key: jwt-secret

        volumeMounts:
        - name: medusa-workspace
          mountPath: /app
          readOnly: true

        # Resource management (workers typically need less resources)
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"

        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL

      volumes:
      - name: medusa-workspace
        persistentVolumeClaim:
          claimName: medusa-workspace-pvc

      # Pod security and scheduling
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001

      restartPolicy: Always
      terminationGracePeriodSeconds: 30