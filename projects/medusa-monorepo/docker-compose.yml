services:
  postgres:
    image: postgres:15-alpine
    container_name: medusa_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-medusa-store}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - medusa_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: medusa_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - medusa_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  medusa:
    build: 
      context: ./my-medusa-store
      dockerfile: Dockerfile
    container_name: medusa_backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "9090:9000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:postgres@postgres:5432/medusa-store}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - STORE_CORS=${STORE_CORS:-http://localhost:3000,http://storefront:3000}
      - ADMIN_CORS=${ADMIN_CORS:-http://localhost:9090}
    networks:
      - medusa_network
    healthcheck:
      test: ["CMD", "wget", "-q", "-O-", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  storefront:
    build:
      context: ./my-medusa-storefront
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-production}
    container_name: medusa_storefront
    restart: unless-stopped
    depends_on:
      medusa:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - MEDUSA_BACKEND_URL=${MEDUSA_BACKEND_URL:-http://medusa:9000}
      - MEDUSA_ADMIN_EMAIL=${ADMIN_EMAIL}
      - MEDUSA_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL:-http://localhost:3000}
      - NEXT_PUBLIC_DEFAULT_REGION=${NEXT_PUBLIC_DEFAULT_REGION:-dk}
      - NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY=${NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY}
      - NEXT_TELEMETRY_DISABLED=1
      - MAX_RETRIES=30
      - RETRY_DELAY=5
    networks:
      - medusa_network
    # volumes:
      # Note: Removed volume mounts that were overriding src directory
      # For development, rebuild the image instead
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s

volumes:
  postgres_data:

networks:
  medusa_network:
    driver: bridge