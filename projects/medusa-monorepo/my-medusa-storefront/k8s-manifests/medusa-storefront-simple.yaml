apiVersion: v1
kind: ConfigMap
metadata:
  name: medusa-storefront-code
  namespace: medusa
data:
  setup.sh: |
    #!/bin/sh
    set -e
    echo "Setting up Medusa storefront..."
    
    # Clone the repository
    git clone https://git.xuperson.org/helloroot/medusa-fresh.git /tmp/code
    cp -r /tmp/code/my-medusa-storefront/* /app/
    
    cd /app
    npm install
    
    # Build the frontend
    npm run build || echo "Build failed, continuing..."
    
    # Start server
    npm start
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: medusa-storefront
  namespace: medusa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: medusa-storefront
  template:
    metadata:
      labels:
        app: medusa-storefront
    spec:
      containers:
      - name: storefront
        image: node:20-alpine
        command: ["/bin/sh", "-c"]
        args: ["apk add --no-cache git && sh /scripts/setup.sh"]
        ports:
        - containerPort: 3000
        env:
        - name: NEXT_PUBLIC_MEDUSA_BACKEND_URL
          value: "http://medusa-backend:9000"
        - name: NODE_ENV
          value: production
        envFrom:
        - secretRef:
            name: medusa-storefront-secrets
            optional: true
        volumeMounts:
        - name: scripts
          mountPath: /scripts
        - name: app
          mountPath: /app
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
      volumes:
      - name: scripts
        configMap:
          name: medusa-storefront-code
          defaultMode: 0755
      - name: app
        emptyDir: {}